---
# Tasks để kiểm tra quyền và user permissions

- name: Kiểm tra user hiện tại
  command: whoami
  register: current_user
  changed_when: false
  tags: [validation, permissions]

- name: Kiểm tra quyền root trực tiếp
  command: id -u
  register: user_id
  changed_when: false
  tags: [validation, permissions]

- name: Kiểm tra khả năng sudo
  command: sudo -n true
  register: sudo_check
  failed_when: false
  changed_when: false
  tags: [validation, permissions]

- name: Hiển thị thông tin user và quyền
  debug:
    msg: |
      👤 User Information:
      - Current user: {{ current_user.stdout }}
      - User ID: {{ user_id.stdout }}
      - Is root: {{ (user_id.stdout == '0') | ternary('Yes', 'No') }}
      - Sudo available: {{ (sudo_check.rc == 0) | ternary('Yes', 'No') }}
      - Become method: {{ ansible_become_method | default('not configured') }}
      - Become user: {{ ansible_become_user | default('not configured') }}
  tags: [validation, permissions]

- name: Cảnh báo nếu không phải root và không có sudo
  fail:
    msg: |
      ❌ INSUFFICIENT PERMISSIONS
      
      User: {{ current_user.stdout }} (UID: {{ user_id.stdout }})
      Root: {{ (user_id.stdout == '0') | ternary('Yes', 'No') }} | Sudo: {{ (sudo_check.rc == 0) | ternary('Yes', 'No') }}
      
      🔧 Quick Fix:
      sudo echo "{{ current_user.stdout }} ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/{{ current_user.stdout }}
      
      Or run with: ansible-playbook deploy-dev.yml -b -K
  when: 
    - user_id.stdout != '0'
    - sudo_check.rc != 0
    - not ansible_become | default(false)
  tags: [validation, permissions]

- name: Thông báo thành công về quyền
  debug:
    msg: |
      ✅ PERMISSION CHECK PASSED
      
      {% if user_id.stdout == '0' %}
      Access: Root user (UID 0) - Direct admin access
      {% elif sudo_check.rc == 0 %}
      Access: User '{{ current_user.stdout }}' with sudo privileges
      {% elif ansible_become | default(false) %}
      Access: Ansible become configured ({{ ansible_become_method | default('sudo') }})
      {% endif %}
      
      🔧 Ready to proceed with MySQL installation
  when: 
    - user_id.stdout == '0' or sudo_check.rc == 0 or ansible_become | default(false)
  tags: [validation, permissions]

- name: Cảnh báo cho environment production với user thường
  debug:
    msg: |
      ✅ PRODUCTION SECURITY BEST PRACTICE
      
      Using non-root user '{{ current_user.stdout }}' with sudo - RECOMMENDED!
      
      🔒 Security: ✅ Least privilege | ✅ Audit trail | ✅ Reduced attack surface
      📋 Requirements: ✅ Sudo access | ✅ Passwordless sudo | ✅ SSH keys
      � Ready for: Package install, User creation, Service management, OS tuning
  when: 
    - mysql_environment == 'prod'
    - user_id.stdout != '0'
    - sudo_check.rc == 0 or ansible_become | default(false)
  tags: [validation, permissions, security]

- name: Kiểm tra quyền ghi vào thư mục quan trọng
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /tmp/mysql-ansible-test
  register: directory_test
  failed_when: false
  tags: [validation, permissions]

- name: Dọn dẹp test directory
  file:
    path: /tmp/mysql-ansible-test
    state: absent
  tags: [validation, permissions]

- name: Cảnh báo nếu không thể tạo directory
  debug:
    msg: |
      ⚠️  WARNING: Directory creation test failed
      Check filesystem permissions and disk space before proceeding.
  when: directory_test.failed | default(false)
  tags: [validation, permissions]

- name: Kiểm tra các lệnh cần thiết có sẵn không
  command: which {{ item }}
  register: command_check
  failed_when: false
  changed_when: false
  loop:
    - sudo
    - systemctl
    - wget
    - tar
    - groupadd
    - useradd
  tags: [validation, commands]

- name: Báo cáo các lệnh thiếu
  debug:
    msg: |
      📋 Command Check:
      {% for result in command_check.results %}
      {{ result.item }}: {{ (result.rc == 0) | ternary('✅', '❌') }}{% if not loop.last %} | {% endif %}
      {% endfor %}
      
      Status: {{ (command_check.results | selectattr('rc', 'ne', 0) | list | length > 0) | ternary('⚠️ Some commands missing', '✅ All commands available') }}
  tags: [validation, commands]
