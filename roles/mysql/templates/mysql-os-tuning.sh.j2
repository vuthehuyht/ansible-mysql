#!/bin/bash
### BEGIN INIT INFO
# Provides:          mysql-os-tuning
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: MySQL OS Performance Tuning
# Description:       Applies OS optimizations for MySQL server
### END INIT INFO

# MySQL OS Tuning Script
# Environment: {{ mysql_environment | upper }}
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

case "$1" in
    start)
        echo "Applying MySQL OS optimizations..."
        
        # Disable Transparent Huge Pages
        if [ -f /sys/kernel/mm/transparent_hugepage/enabled ]; then
            echo never > /sys/kernel/mm/transparent_hugepage/enabled
        fi
        if [ -f /sys/kernel/mm/transparent_hugepage/defrag ]; then
            echo never > /sys/kernel/mm/transparent_hugepage/defrag
        fi
        
        # Set I/O Scheduler
        for device in $(lsblk -nd -o NAME | grep -E '^(sd|nvme|xvd)'); do
            if [ -f /sys/block/$device/queue/scheduler ]; then
                echo "{{ mysql_io_scheduler }}" > /sys/block/$device/queue/scheduler
                echo "{{ mysql_read_ahead_kb }}" > /sys/block/$device/queue/read_ahead_kb
                {% if mysql_environment == 'prod' %}
                echo "{{ mysql_nr_requests }}" > /sys/block/$device/queue/nr_requests
                {% endif %}
            fi
        done
        
        {% if mysql_environment == 'prod' %}
        # Set CPU Governor for Production
        for cpu in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do
            if [ -f "$cpu" ]; then
                echo "{{ mysql_cpu_governor }}" > "$cpu"
            fi
        done
        {% endif %}
        
        # Apply network optimizations
        echo {{ mysql_netdev_max_backlog }} > /proc/sys/net/core/netdev_max_backlog
        echo {{ mysql_somaxconn }} > /proc/sys/net/core/somaxconn
        
        echo "MySQL OS optimizations applied successfully"
        ;;
        
    stop)
        echo "MySQL OS tuning stop (no action required)"
        ;;
        
    restart)
        $0 stop
        $0 start
        ;;
        
    status)
        echo "=== MySQL OS Optimization Status ==="
        echo "Environment: {{ mysql_environment | upper }}"
        echo ""
        
        echo "Transparent Huge Pages:"
        if [ -f /sys/kernel/mm/transparent_hugepage/enabled ]; then
            cat /sys/kernel/mm/transparent_hugepage/enabled | grep -o '\[.*\]' | tr -d '[]'
        fi
        
        echo ""
        echo "I/O Schedulers:"
        for dev in $(ls /sys/block/ | grep -E '^(sd|nvme|xvd)' | head -3); do
            if [ -f /sys/block/$dev/queue/scheduler ]; then
                echo "$dev: $(cat /sys/block/$dev/queue/scheduler | grep -o '\[.*\]' | tr -d '[]')"
            fi
        done
        
        {% if mysql_environment == 'prod' %}
        echo ""
        echo "CPU Governor:"
        for cpu in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do
            if [ -f "$cpu" ]; then
                echo "CPU: $(cat $cpu)"
                break
            fi
        done
        {% endif %}
        ;;
        
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

exit 0
