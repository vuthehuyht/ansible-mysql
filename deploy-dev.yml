---
# COMPLETE MYSQL 8.0.42 DEPLOYMENT FOR DEVELOPMENT ENVIRONMENT
# This playbook contains all steps from start to finish with variables loaded from group_vars
- name: Complete MySQL 8.0.42 Development Environment Deployment
  hosts: mysql_servers
  become: yes
  become_method: sudo
  gather_facts: yes
  
  vars_files:
    - group_vars/all/common.yml
    - group_vars/all/dev.yml

  pre_tasks:
    - name: "🚀 Starting MySQL 8.0.42 Development Deployment"
      debug:
        msg: |
          🚀 MYSQL 8.0.42 DEVELOPMENT DEPLOYMENT
          Environment: {{ selected_environment | upper }} | Version: {{ mysql_version }}
          Servers: {{ ansible_play_hosts | length }} | Method: Binary installation
          
          ⏱️  Estimated time: 10-15 minutes per server

  tasks:
    # STEP 1: Permission and Environment Validation
    - name: "📋 STEP 1: Permission and Environment Validation"
      include_tasks: roles/mysql/tasks/check-permissions.yml
      tags: [step1, validation, permissions]

    - name: "🕐 STEP 2: Time Synchronization Setup"
      include_tasks: roles/mysql/tasks/sync-time.yml
      tags: [step2, time-sync]

    - name: "⚡ STEP 3: OS Performance Optimization"
      include_tasks: roles/mysql/tasks/optimize-os.yml
      tags: [step3, os-optimization]

    - name: "🧹 STEP 4: System Updates and Cleanup"
      include_tasks: roles/mysql/tasks/update-system.yml
      tags: [step4, system-update]

    - name: "🗑️  STEP 5: MySQL Cleanup (if exists)"
      include_tasks: roles/mysql/tasks/cleanup-old-mysql.yml
      tags: [step5, cleanup]

    - name: "📦 STEP 6: MySQL 8.0.42 Installation"
      include_tasks: roles/mysql/tasks/debian.yml
      tags: [step6, installation]

    - name: "⚙️  STEP 7: MySQL Configuration"
      include_tasks: roles/mysql/tasks/configure-mysql.yml
      tags: [step7, configuration]

    - name: "🔒 STEP 8: MySQL Security Setup"
      include_tasks: roles/mysql/tasks/secure-installation.yml
      tags: [step8, security]

    - name: "🗄️  STEP 9: Database and User Creation"
      block:
        - name: Create MySQL databases
          mysql_db:
            name: "{{ item.name }}"
            state: present
            login_user: root
            login_password: "{{ mysql_root_password }}"
            encoding: "{{ item.encoding | default(mysql_character_set) }}"
            collation: "{{ item.collation | default(mysql_collation) }}"
          loop: "{{ mysql_databases }}"
          when: mysql_databases is defined and mysql_databases | length > 0

        - name: Create MySQL users
          mysql_user:
            name: "{{ item.name }}"
            password: "{{ item.password }}"
            priv: "{{ item.priv | default('*.*:USAGE') }}"
            host: "{{ item.host | default('localhost') }}"
            state: present
            login_user: root
            login_password: "{{ mysql_root_password }}"
          loop: "{{ mysql_users }}"
          when: mysql_users is defined and mysql_users | length > 0
      tags: [step9, database-setup]

  post_tasks:
    - name: "✅ STEP 10: Final Validation and Status Report"
      block:
        - name: Verify MySQL service status
          systemd:
            name: mysql
          register: mysql_service_final_status

        - name: Test MySQL connection
          command: mysql -u root -p{{ mysql_root_password }} -e "SELECT VERSION();"
          register: mysql_version_check
          changed_when: false
          no_log: true

        - name: Check MySQL port
          wait_for:
            port: "{{ mysql_port }}"
            host: "{{ ansible_default_ipv4.address }}"
            timeout: 10
          register: port_check

        - name: Display final deployment status
          debug:
            msg: |
              ✅ MYSQL 8.0.42 DEVELOPMENT DEPLOYMENT COMPLETE
              
              Server: {{ inventory_hostname }} | Environment: {{ selected_environment | upper }}
              Version: {{ mysql_version_check.stdout | default('Unknown') }}
              Service: {{ mysql_service_final_status.status.ActiveState }} | Port: {{ (port_check is succeeded) | ternary('✅', '❌') }}
              
              Connection: mysql -u root -p{{ mysql_root_password }} -h {{ ansible_default_ipv4.address }}
              
              5. Configuration file: /etc/my.cnf
              
              ⚠️  Development Environment Notes:
              - This is configured for DEVELOPMENT use
              - Root password: DevPassword123!
              - Remote connections allowed from any host (0.0.0.0)
              - Query logging enabled for debugging
              - Relaxed security settings for development convenience
              - Performance optimized for development workload
              
              🚀 Development MySQL server is ready for use!

      rescue:
        - name: Display deployment failure information
          debug:
            msg: |
              ❌ MYSQL DEPLOYMENT FAILED
              ═══════════════════════════════════
              
              Please check:
              1. Service status: sudo systemctl status mysql
              2. Error logs: sudo tail -50 /var/log/mysql/error.log
              3. System logs: sudo journalctl -u mysql -n 50
              4. Disk space: df -h
              5. Permissions: ls -la {{ mysql_datadir }}
              
              Common issues:
              - Insufficient disk space
              - Port already in use
              - Permission problems
              - Configuration errors
              
              Run with verbose mode for more details:
              ansible-playbook deploy-dev.yml -vvv

      tags: [step10, validation, final-report]
