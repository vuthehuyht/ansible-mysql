---
# COMPLETE MYSQL 8.0.42 DEPLOYMENT FOR PRODUCTION ENVIRONMENT
# This playbook contains all steps from start to finish with variables loaded from group_vars
- name: Complete MySQL 8.0.42 Production Environment Deployment
  hosts: mysql_servers
  become: yes
  become_method: sudo
  gather_facts: yes
  
  vars_files:
    - group_vars/all/common.yml
    - group_vars/all/prod.yml

  pre_tasks:
    - name: "🚀 Starting MySQL 8.0.42 Production Deployment"
      debug:
        msg: |
          🚀 MYSQL 8.0.42 PRODUCTION DEPLOYMENT
          Environment: {{ selected_environment | upper }} | Version: {{ mysql_version }}
          Servers: {{ ansible_play_hosts | length }} | Security: Production hardened
          ✅ Time synchronization (strict)
          ✅ OS performance tuning (production profile)
          ✅ MySQL cleanup (if exists)
          ✅ MySQL 8.0.42 binary installation
          ✅ Production-grade configuration
          ✅ Security hardening
          ✅ Database and user creation
          ✅ Final validation and monitoring setup
          
          ⏱️  Estimated time: 15-25 minutes per server
          
          ⚠️  PRODUCTION DEPLOYMENT WARNING:
          This will install MySQL with production-grade security.
          Ensure you have backup of any existing data!

    - name: "🔐 Production Deployment Confirmation"
      pause:
        prompt: |
          
          ⚠️  PRODUCTION ENVIRONMENT DEPLOYMENT
          ═══════════════════════════════════════
          
          You are about to deploy MySQL 8.0.42 in PRODUCTION mode.
          This includes:
          - High-performance OS tuning
          - Production security hardening
          - Resource optimization for production workload
          
          Are you sure you want to continue? (Press Enter to continue, Ctrl+C to abort)

  tasks:
    # STEP 1: Permission and Environment Validation
    - name: "📋 STEP 1: Permission and Environment Validation"
      include_tasks: roles/mysql/tasks/check-permissions.yml
      tags: [step1, validation, permissions]

    - name: "🕐 STEP 2: Time Synchronization Setup (Production Grade)"
      include_tasks: roles/mysql/tasks/sync-time.yml
      tags: [step2, time-sync]

    - name: "⚡ STEP 3: OS Performance Optimization (Production)"
      include_tasks: roles/mysql/tasks/optimize-os.yml
      tags: [step3, os-optimization]

    - name: "🧹 STEP 4: System Updates and Cleanup"
      include_tasks: roles/mysql/tasks/update-system.yml
      tags: [step4, system-update]

    - name: "🗑️  STEP 5: MySQL Cleanup (if exists)"
      include_tasks: roles/mysql/tasks/cleanup-old-mysql.yml
      tags: [step5, cleanup]

    - name: "📦 STEP 6: MySQL 8.0.42 Installation"
      include_tasks: roles/mysql/tasks/debian.yml
      tags: [step6, installation]

    - name: "⚙️  STEP 7: MySQL Configuration (Production Grade)"
      include_tasks: roles/mysql/tasks/configure-mysql.yml
      tags: [step7, configuration]

    - name: "🔒 STEP 8: MySQL Security Hardening"
      include_tasks: roles/mysql/tasks/secure-installation.yml
      tags: [step8, security]

    - name: "🗄️  STEP 9: Database and User Creation (Production)"
      block:
        - name: Create MySQL databases
          mysql_db:
            name: "{{ item.name }}"
            state: present
            login_user: root
            login_password: "{{ mysql_root_password }}"
            encoding: "{{ item.encoding | default(mysql_character_set) }}"
            collation: "{{ item.collation | default(mysql_collation) }}"
          loop: "{{ mysql_databases }}"
          when: mysql_databases is defined and mysql_databases | length > 0

        - name: Create MySQL users with minimal privileges
          mysql_user:
            name: "{{ item.name }}"
            password: "{{ item.password }}"
            priv: "{{ item.priv | default('*.*:USAGE') }}"
            host: "{{ item.host | default('localhost') }}"
            state: present
            login_user: root
            login_password: "{{ mysql_root_password }}"
          loop: "{{ mysql_users }}"
          when: mysql_users is defined and mysql_users | length > 0
      tags: [step9, database-setup]

  post_tasks:
    - name: "✅ STEP 10: Final Validation and Production Status Report"
      block:
        - name: Verify MySQL service status
          systemd:
            name: mysql
          register: mysql_service_final_status

        - name: Test MySQL connection
          command: mysql -u root -p{{ mysql_root_password }} -e "SELECT VERSION();"
          register: mysql_version_check
          changed_when: false
          no_log: true

        - name: Check MySQL port
          wait_for:
            port: "{{ mysql_port }}"
            host: "127.0.0.1"
            timeout: 10
          register: port_check

        - name: Verify production security settings
          command: mysql -u root -p{{ mysql_root_password }} -e "SHOW VARIABLES LIKE '{{ item }}';"
          register: security_check
          changed_when: false
          no_log: true
          loop:
            - "bind_address"
            - "skip_networking"
            - "local_infile"

        - name: Display final production deployment status
          debug:
            msg: |
              ✅ MYSQL 8.0.42 PRODUCTION DEPLOYMENT COMPLETE
              
              Server: {{ inventory_hostname }} | Environment: {{ selected_environment | upper }}
              Version: {{ mysql_version_check.stdout | default('Unknown') }}
              Service: {{ mysql_service_final_status.status.ActiveState }} | Security: localhost only
              - Root Access: Local only
              - User Privileges: Minimal required permissions
              - Password Storage: Ansible Vault encrypted
              
              🔧 Service Information:
              - Service Name: mysql
              - Port: {{ mysql_port }} (local access only)
              - Socket: {{ mysql_socket }}
              - Character Set: {{ mysql_character_set }}
              - Performance Profile: Production optimized
              
              🗄️  Database Setup:
              {% if mysql_databases is defined %}
              - Databases Created: {{ mysql_databases | map(attribute='name') | join(', ') }}
              {% endif %}
              {% if mysql_users is defined %}
              - Users Created: {{ mysql_users | map(attribute='name') | join(', ') }}
              {% endif %}
              
              📋 Production Management Commands:
              1. Service management:
                 sudo systemctl status mysql
                 sudo systemctl restart mysql
              
              2. Check logs:
                 sudo tail -f /var/log/mysql/error.log
                 sudo tail -f /var/log/mysql/slow.log
              
              3. Connect locally:
                 mysql -u root -p -h localhost
              
              4. Monitor performance:
                 sudo mysqladmin -u root -p processlist
                 sudo mysqladmin -u root -p status
              
              5. Configuration file: /etc/my.cnf
              
              🔒 PRODUCTION SECURITY NOTES:
              ═══════════════════════════════════
              - Remote connections are DISABLED (localhost only)
              - Use SSH tunneling for remote access:
                ssh -L 3306:localhost:3306 user@{{ ansible_default_ipv4.address }}
              - All passwords are encrypted with Ansible Vault
              - Users have minimal required privileges only
              - General query logging is DISABLED for performance
              - Slow query logging is ENABLED for monitoring
              
              📊 Performance Optimizations Applied:
              - InnoDB buffer pool: {{ mysql_innodb_buffer_pool_size }}
              - Max connections: {{ mysql_max_connections }}
              - Query cache size: {{ mysql_query_cache_size }}
              - OS-level optimizations for production workload
              
              🚀 Production MySQL server is ready and secured!

      rescue:
        - name: Display production deployment failure information
          debug:
            msg: |
              ❌ PRODUCTION MYSQL DEPLOYMENT FAILED
              ═══════════════════════════════════════
              
              Production deployment requires immediate attention:
              
              1. Service status: sudo systemctl status mysql
              2. Error logs: sudo tail -50 /var/log/mysql/error.log
              3. System logs: sudo journalctl -u mysql -n 50
              4. Disk space: df -h
              5. Permissions: ls -la {{ mysql_datadir }}
              6. Process list: ps aux | grep mysql
              7. Network status: netstat -tlnp | grep 3306
              
              Common production issues:
              - Insufficient memory for large buffer pools
              - Disk I/O performance bottlenecks
              - Network configuration conflicts
              - Security policy restrictions
              - Resource limits (file descriptors, processes)
              
              For production troubleshooting:
              ansible-playbook deploy-prod.yml -vvv --ask-vault-pass
              
              Contact system administrator immediately for production failures.

      tags: [step10, validation, final-report]
